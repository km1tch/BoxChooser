services:
  caddy:
    image: caddy:2-alpine
    container_name: packingsite_caddy
    ports:
      - "5893:80"
      - "5443:443"
    volumes:
      - ./Caddyfile.dev:/etc/caddy/Caddyfile:ro
      - ./frontend:/srv/frontend:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - SITE_URL=${SITE_URL:-https://localhost}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://localhost}
    depends_on:
      - backend
    restart: unless-stopped

  backend:
    build: .
    container_name: packingsite_backend
    volumes:
      - ./backend:/code/backend
      - ./stores:/code/stores
      - ./floorplans:/code/floorplans
      - ./db:/db
    environment:
      - SQLITE_DB_PATH=/db/packingwebsite.db
      # Security
      - SECRET_KEY=${SECRET_KEY:-dev-secret-key-change-in-production}
      - SESSION_LIFETIME_HOURS=${SESSION_LIFETIME_HOURS:-8}
      - MAX_LOGIN_ATTEMPTS=${MAX_LOGIN_ATTEMPTS:-5}
      - RATE_LIMIT_PER_MINUTE=${RATE_LIMIT_PER_MINUTE:-10}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-https://localhost}
      # SMTP email configuration (defaults to MailHog in dev)
      - SMTP_HOST=${SMTP_HOST:-mailhog}
      - SMTP_PORT=${SMTP_PORT:-1025}
      - SMTP_USE_TLS=${SMTP_USE_TLS:-false}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-}
      - SMTP_FROM=${SMTP_FROM:-noreply@packingsite.com}
    depends_on:
      - mailhog
    restart: unless-stopped

  mailhog:
    image: mailhog/mailhog:latest
    container_name: packingsite_mailhog
    ports:
      - "8026:8025" # Web UI (8026 on host, 8025 in container)
      - "1026:1025" # SMTP Server (1026 on host, 1025 in container)
    restart: unless-stopped

  test:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - ./package.json:/app/package.json:ro
      - ./vitest.config.js:/app/vitest.config.js:ro
      - ./frontend/js/lib:/app/lib:ro
      - ./frontend/js/components:/app/components:ro
      - ./frontend/tests:/app/tests:ro
      - node_modules:/app/node_modules
    command: sh -c "npm install && npm test"
    profiles: ["test"]

volumes:
  node_modules:
  caddy_data:
  caddy_config: